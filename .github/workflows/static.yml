# Simple workflow for deploying static content to GitHub Pages
name: Deploy Doxyen to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "feature/doc_versioning"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-doxygen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install doxygen
        run: git clone https://github.com/doxygen/doxygen.git -b Release_1_9_8 \
              && mkdir -p doxygen/build \
              && cd doxygen/build \
              && cmake -G "Unix Makefiles" .. \
              && make -j \
              && sudo make install \
              && sudo apt-get -y install graphviz

      - name: Generate documents
        run: ./generate_doxygen.sh

      - name: Add .nojekyll
        run: sudo touch ./html/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./html

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-doxygen
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
